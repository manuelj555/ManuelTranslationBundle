<?php

namespace ManuelAguirre\Bundle\TranslationBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * TranslationLog
 *
 * @ORM\Table(name="translation_bundle_translation_log")
 * @ORM\Entity(repositoryClass="ManuelAguirre\Bundle\TranslationBundle\Entity\TranslationLogRepository")
 *
 * @ORM\HasLifecycleCallbacks()
 */
class TranslationLog
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\ManyToOne(targetEntity="ManuelAguirre\Bundle\TranslationBundle\Entity\Translation")
     */
    private $translation;

    /**
     * @var string
     *
     * @ORM\Column(name="code", type="string", length=255)
     */
    private $code;

    /**
     * @var string
     *
     * @ORM\Column(name="domain", type="string", length=255)
     */
    private $domain = 'messages';

    /**
     * @var boolean
     *
     * @ORM\Column(name="new", type="boolean")
     */
    private $new;

    /**
     * @var boolean
     *
     * @ORM\Column(name="autogenerated", type="boolean")
     */
    private $autogenerated;

    /**
     * @var boolean
     *
     * @ORM\Column(name="active", type="boolean")
     */
    private $active;

    /**
     * @ORM\Column(name="trans_values", type="array", nullable=true)
     */
    private $values;

    /**
     * @ORM\Column(name="files", type="array", nullable=true)
     */
    private $files = array();

    /**
     * @ORM\Column(name="logged_at", type="datetime")
     */
    private $loggedAt = array();

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set code
     *
     * @param string $code
     *
     * @return TranslationLog
     */
    public function setCode($code)
    {
        $this->code = $code;

        return $this;
    }

    /**
     * Get code
     *
     * @return string
     */
    public function getCode()
    {
        return $this->code;
    }

    /**
     * Set domain
     *
     * @param string $domain
     *
     * @return TranslationLog
     */
    public function setDomain($domain)
    {
        $this->domain = $domain;

        return $this;
    }

    /**
     * Get domain
     *
     * @return string
     */
    public function getDomain()
    {
        return $this->domain;
    }

    /**
     * Set new
     *
     * @param boolean $new
     *
     * @return TranslationLog
     */
    public function setNew($new)
    {
        $this->new = $new;

        return $this;
    }

    /**
     * Get new
     *
     * @return boolean
     */
    public function getNew()
    {
        return $this->new;
    }

    /**
     * Set autogenerated
     *
     * @param boolean $autogenerated
     *
     * @return TranslationLog
     */
    public function setAutogenerated($autogenerated)
    {
        $this->autogenerated = $autogenerated;

        return $this;
    }

    /**
     * Get autogenerated
     *
     * @return boolean
     */
    public function getAutogenerated()
    {
        return $this->autogenerated;
    }

    /**
     * Set active
     *
     * @param boolean $active
     *
     * @return TranslationLog
     */
    public function setActive($active)
    {
        $this->active = $active;

        return $this;
    }

    /**
     * Get active
     *
     * @return boolean
     */
    public function getActive()
    {
        return $this->active;
    }

    /**
     * Set values
     *
     * @param array $values
     *
     * @return TranslationLog
     */
    public function setValues($values)
    {
        $this->values = $values;

        return $this;
    }

    /**
     * Get values
     *
     * @return array
     */
    public function getValues()
    {
        return $this->values;
    }

    /**
     * Set files
     *
     * @param array $files
     *
     * @return TranslationLog
     */
    public function setFiles($files)
    {
        $this->files = $files;

        return $this;
    }

    /**
     * Get files
     *
     * @return array
     */
    public function getFiles()
    {
        return $this->files;
    }

    /**
     * Set translation
     *
     * @param \ManuelAguirre\Bundle\TranslationBundle\Entity\Translation $translation
     * @return TranslationLog
     */
    public function setTranslation(\ManuelAguirre\Bundle\TranslationBundle\Entity\Translation $translation = null)
    {
        $this->translation = $translation;

        $this->setCode($translation->getCode());
        $this->setDomain($translation->getDomain());
        $this->setValues($translation->getValues());
        $this->setFiles($translation->getFiles());
        $this->setNew($translation->getNew());
        $this->setActive($translation->getActive());
        $this->setAutogenerated($translation->getAutogenerated());

        return $this;
    }

    /**
     * Get translation
     *
     * @return \ManuelAguirre\Bundle\TranslationBundle\Entity\Translation 
     */
    public function getTranslation()
    {
        return $this->translation;
    }

    /**
     * Set loggedAt
     *
     * @param \DateTime $loggedAt
     * @return TranslationLog
     */
    public function setLoggedAt($loggedAt)
    {
        $this->loggedAt = $loggedAt;

        return $this;
    }

    /**
     * Get loggedAt
     *
     * @return \DateTime 
     */
    public function getLoggedAt()
    {
        return $this->loggedAt;
    }

    /**
     * @ORM\PrePersist
     */
    public function setLoggedAtValue()
    {
        $this->setLoggedAt(new \DateTime('now'));
    }
}
