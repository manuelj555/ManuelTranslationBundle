import React, {useContext, useState} from "react";
import {Button, ButtonGroup, Card, Dropdown, Form, Placeholder} from "react-bootstrap";
import GlobalsContext from "../../context/GlobalsContext";
import Icon from "../Icon";

export default function Item({translation}) {
    const [editing, isEditing] = useState(false);

    const handleEditClick = () => isEditing(true);
    const handleCancelClick = () => isEditing(false);

    return (
        <div className="translation-item mb-2">
            {editing
                ? <ItemForm
                    item={translation}
                    handleCancel={handleCancelClick}
                />
                : <ItemText
                    item={translation}
                    handleEdit={handleEditClick}
                />
            }
        </div>
    );
}

const ItemText = ({item, handleEdit}) => {
    const {booleanLabel} = useContext(GlobalsContext);

    return (
        <Card>
            <Card.Header>
                <div className="row align-items-center">
                    <Card.Title className="col-sm-6 m-0">{item.code}</Card.Title>
                    <div className="col-sm-2 text-muted text-end">
                        {item.domain}
                    </div>
                    <div className="col-sm-2 text-end">
                        <b>Autogenerated:</b> {booleanLabel(item.autogenerated)}
                    </div>
                    <div className="col-sm-2 text-end">
                        <b>Active:</b> {booleanLabel(item.active)}
                    </div>
                </div>
            </Card.Header>
            <Card.Body>
                <div className="row align-items-start">
                    <div className="col-sm-10 col-lg-11">
                        {Object.entries(item.values).map(([locale, value]) => (
                            <div key={locale} className="d-flex">
                                <div className="me-2 mt-1">{locale}</div>
                                <pre className="flex-fill trans-value">{value}</pre>
                            </div>
                        ))}
                    </div>
                    <div className="d-grid gap-2 col-sm-2 col-lg-1">
                        <Dropdown as={ButtonGroup} size="sm">
                            <Button variant="outline-secondary" onClick={handleEdit}>
                                <Icon icon="pencil-square"/>
                                Edit
                            </Button>
                            <Dropdown.Toggle split variant="outline-secondary"/>

                            <Dropdown.Menu>
                                <Dropdown.Item><Icon icon="trash"/>Deactivate</Dropdown.Item>
                                <Dropdown.Item><Icon icon="check-circle"/>Activate</Dropdown.Item>
                            </Dropdown.Menu>
                        </Dropdown>
                    </div>
                </div>
            </Card.Body>
        </Card>
    );
};

const ItemForm = ({item, handleCancel}) => {
    const {booleanLabel} = useContext(GlobalsContext);
    const isNew = !item.id;

    return (
        <Card>
            <Card.Header>
                <div className="row align-items-center">
                    <div className="col-sm-6 m-0">
                        <Form.Control defaultValue={item.code} size="sm" disabled={!isNew}/>
                    </div>

                    {/*<span slot="message">*/}
                    {/*    <span className="glyphicon glyphicon-ok label label-success">*/}
                    {/*        Save Successfull!*/}
                    {/*    </span>*/}
                    {/*    <span className="glyphicon glyphicon-remove label label-danger">*/}
                    {/*        Save Error!*/}
                    {/*    </span>*/}
                    {/*</span>*/}

                    <div className="col-sm-2 text-muted text-end">
                        <select></select>
                    </div>
                    <div className="col-sm-2 text-end">
                        <b>Autogenerated:</b> {booleanLabel(item.autogenerated)}
                    </div>
                    <div className="col-sm-2 text-end">
                        <b>Active:</b> {booleanLabel(item.active)}
                    </div>
                </div>
            </Card.Header>
            <Card.Body>
                <div className="row align-items-start">
                    <div className="col-sm-10">
                        {Object.entries(item.values).map(([locale, value]) => (
                            <div key={locale} className="d-flex">
                                <div className="me-2 mt-1">{locale}</div>
                                <pre className="flex-fill trans-value">{value}</pre>
                            </div>
                        ))}
                    </div>
                    <div className="d-grid gap-2 col-sm-2">
                        <Button variant="primary"><Icon icon="save"/>Save</Button>
                        <Button variant="danger" onClick={handleCancel}><Icon icon="x"/>Cancel</Button>
                    </div>
                </div>
            </Card.Body>
        </Card>
    );
};

const LoadingItem = () => {
    return (
        <div className="translation-item mb-2">
            <Card>
                <Card.Header>
                    <div className="row align-items-center">

                        <Card.Title className="col-sm-6 m-0">
                            <Placeholder xs={7}/>
                        </Card.Title>

                        <div className="col-sm-2 text-muted text-end">
                            <Placeholder xs={11}/>
                        </div>
                        <div className="col-sm-2 text-end">
                            <Placeholder xs={11}/>
                        </div>
                        <div className="col-sm-2 text-end">
                            <Placeholder xs={11}/>
                        </div>
                    </div>
                </Card.Header>
                <Card.Body>
                    <div className="row align-items-start">
                        <div className="col-sm-10 col-lg-11">
                            <div className="d-flex gap-2 mb-2">
                                <Placeholder className="py-3" xs={1}/>
                                <Placeholder className="py-3" xs={7}/>
                            </div>
                            <div className="d-flex gap-2 mb-2">
                                <Placeholder className="py-3" xs={1}/>
                                <Placeholder className="py-3" xs={5}/>
                            </div>
                            <div className="d-flex gap-2 mb-2">
                                <Placeholder className="py-3" xs={1}/>
                                <Placeholder className="py-3" xs={6}/>
                            </div>
                        </div>
                        <div className="d-grid gap-2 col-sm-2 col-lg-1">
                            <Placeholder.Button xs={12}/>
                        </div>
                    </div>
                </Card.Body>
            </Card>
        </div>
    );
};

export {LoadingItem};